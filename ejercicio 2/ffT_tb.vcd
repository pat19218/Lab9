$date
	Thu Oct 29 14:00:24 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! q4 [3:0] $end
$var wire 2 " q2 [1:0] $end
$var wire 1 # q1 $end
$var reg 1 $ clk $end
$var reg 1 % d1 $end
$var reg 2 & d2 [1:0] $end
$var reg 4 ' d4 [3:0] $end
$var reg 1 ( enabled $end
$var reg 1 ) reset $end
$scope module eins $end
$var wire 1 $ clk $end
$var wire 1 % d $end
$var wire 1 ( ena $end
$var wire 1 ) reset $end
$var reg 1 # q $end
$upscope $end
$scope module vier $end
$var wire 1 $ clk $end
$var wire 4 * d [3:0] $end
$var wire 1 ( ena $end
$var wire 1 ) reset $end
$var reg 4 + q [3:0] $end
$upscope $end
$scope module zweis $end
$var wire 1 $ clk $end
$var wire 2 , d [1:0] $end
$var wire 1 ( ena $end
$var wire 1 ) reset $end
$var reg 2 - q [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
bx +
bx *
1)
0(
bx '
bx &
x%
0$
x#
bx "
bx !
$end
#1
0$
1(
1)
#2
1$
0)
#3
0$
#4
b101 !
b101 +
b1 "
b1 -
0#
1$
b1010 '
b1010 *
b10 &
b10 ,
1%
#5
0$
#6
1#
b11 "
b11 -
b1 !
b1 +
1$
b1110 '
b1110 *
b0 &
b0 ,
0%
#7
0$
#8
b100 !
b100 +
b10 "
b10 -
0#
1$
b1011 '
b1011 *
b1 &
b1 ,
1%
#9
0$
#10
b0 "
b0 -
b11 !
b11 +
1$
b1100 '
b1100 *
b11 &
b11 ,
#11
0$
#12
b0 !
b0 +
b1 "
b1 -
1#
1$
b1111 '
b1111 *
b10 &
b10 ,
0%
#13
0$
#14
0#
b0 "
b0 -
b1110 !
b1110 +
1$
b1 '
b1 *
b11 &
b11 ,
1%
#15
0$
#16
b1 !
b1 +
1#
1$
b1110 '
b1110 *
0%
#17
0$
#18
0#
b1 "
b1 -
b10 !
b10 +
1$
b1101 '
b1101 *
b10 &
b10 ,
1%
#19
0$
#20
1$
